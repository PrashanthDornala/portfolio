{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Testimonials.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","email","mobileNo","address","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","DateOfJoining","DateOfLeaving","frontEndSkillsDescription","frontEndskills","concat","skillname","toLowerCase","backEndSkillsDescription","backEndSkills","devToolsDescription","devToolsSkills","Testimonials","textAlign","testimonials","description","client","techStack","ContactUs","Footer","imagebaseurl","linkedinId","skypeid","Designation","MonthOfLeaving","YearOfLeaving","portfolio","imgurl","App","Header_Header","About_About","Resume_Resume","Testimonials_Testimonials","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95a4f86a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Resume\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#testimonials\">\n                  Works\n                </a>\n              </li>\n              {/* <li>\n                <a className=\"smoothscroll\" href=\"#testimonials\">\n                  Testimonials\n                </a>\n              </li> */}\n              <li>\n                <a className=\"smoothscroll\" href=\"#contact\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">{resumeData.name}.</h1>\n              <h3 style={{ color: '#fff', fontFamily: 'sans-serif ' }}>\n                I am a {resumeData.role}.{resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"_blank\">\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    )\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n            <p>{resumeData.aboutme}</p>\n\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span>{resumeData.name}</span>\n                  <br></br>\n                  <span>{resumeData.email}</span>\n                  <br></br>\n                  <span>{resumeData.mobileNo}</span>\n                  <br></br>\n                  <span>{resumeData.address}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{' '}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work Experience</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.work &&\n              resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{' '}\n                        <em className=\"date\">\n                          {item.DateOfJoining} - {item.DateOfLeaving}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n          <div className=\"three columns main-col\">\n            <p>{resumeData.frontEndSkillsDescription}</p>\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.frontEndskills &&\n                  resumeData.frontEndskills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    )\n                  })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"three columns main-col\">\n            <p>{resumeData.backEndSkillsDescription}</p>\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.backEndSkills &&\n                  resumeData.backEndSkills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    )\n                  })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"three columns main-col\">\n            <p>{resumeData.devToolsDescription}</p>\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.devToolsSkills &&\n                  resumeData.devToolsSkills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    )\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData\n    return (\n      <>\n        <section id=\"testimonials\">\n          <div>\n            <div className=\"text-container\">\n              <div className=\"row\" style={{ textAlign: 'center' }}>\n                <div className=\"twelve columns collapsed\">\n                  <h1>\n                    <span>Some of My Works</span>\n                  </h1>\n                </div>\n              </div>\n              <div className=\"row\"></div>\n            </div>\n          </div>\n          <div className=\"text-container\">\n            <div className=\"row\">\n              <div className=\"two columns header-col\">\n                <h1>{/* <span>Client Testimonials</span> */}</h1>\n              </div>\n              <div className=\"ten columns flex-container\">\n                <div className=\"flexslider\">\n                  <ul className=\"slides\">\n                    {resumeData.testimonials &&\n                      resumeData.testimonials.map((item) => {\n                        return (\n                          <li>\n                            <blockquote>\n                              <p>{item.description}</p>\n                              <span>{item.name}</span>\n                              <br />\n                              <br />\n                              <br />\n                              <cite>Client - {item.client}</cite>\n                              <cite>Tech Stack - {item.techStack}</cite>\n                            </blockquote>\n                          </li>\n                        )\n                      })}\n                  </ul>\n                </div>{' '}\n                {/* div.flexslider ends */}\n              </div>{' '}\n              {/* div.flex-container ends */}\n            </div>{' '}\n            {/* row ends */}\n          </div>{' '}\n          {/* text-container ends */}\n        </section>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Works.</h1>\n            <div\n              className=\"three columns main-col\"\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {resumeData.portfolio &&\n                resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"portfolio-item-meta\">\n                        <h5>{item.name}</h5>\n                        <p>{item.description}</p>\n                      </div>\n                    </div>\n                  )\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              {/* <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4> */}\n\n              <span>{resumeData.name}</span>\n              <br></br>\n              <span>{resumeData.email}</span>\n              <br></br>\n              <span>{resumeData.mobileNo}</span>\n              <br></br>\n              <span>{resumeData.address}</span>\n            </div>\n          </aside>\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl: 'ttps://github.com/PrashanthDornala/',\n  name: 'Prasanth Dornala',\n  role: 'Full Stack Dot Net Developer',\n  linkedinId: 'Your LinkedIn Id',\n  skypeid: 'Your skypeid',\n  roleDescription:\n    ' I like dabbling in various parts of web development and like to learn about new technologies.',\n  socialLinks: [\n    {\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/prasanth-dornala/',\n      className: 'fa fa-linkedin',\n    },\n    {\n      name: 'github',\n      url: 'https://github.com/PrashanthDornala/',\n      className: 'fa fa-github',\n    },\n    {\n      name: 'skype',\n      url: 'https://twitter.com/Dornalaprashan1',\n      className: 'fa fa-twitter',\n    },\n  ],\n  aboutme:\n    'Hello, My name is PRASANTH DORNALA. I am a Full Stack Dot Net Developer from Hyderabad, Telangana, India. I love working on a variety of technologies in Web Development. My goal is to build highly performant applications that solve real-world problems and provide users with an awesome experience.',\n  mobileNo: '+91 6301174367',\n  address: 'Hyderabad, Telangana, India',\n  email: 'prasanth.official111@gmail.com',\n  education: [\n    {\n      UniversityName: 'SWARNA BHARATHI ISTITUTE OF SCIENCE TECHNOLOGY',\n      specialization: 'BATCHELOR OF TECHNOLOGY (MECH)',\n      MonthOfPassing: 'Aug',\n      YearOfPassing: '2017',\n      Achievements: '',\n    },\n    {\n      UniversityName: 'SUSEELA MEMORIAL JUNIOR COLLEGE',\n      specialization: 'INERTMEDIATE EDUCATION (MPC)',\n      MonthOfPassing: 'July',\n      YearOfPassing: '2013',\n      Achievements: '',\n    },\n  ],\n  work: [\n    {\n      CompanyName: 'ABJYAON CONSULTANCY PRIVATE LIMITED',\n      Designation: 'Associate Consultant',\n      DateOfJoining: 'Oct 2020',\n      DateOfLeaving: 'Still Working',\n      MonthOfLeaving: '',\n      YearOfLeaving: '2018',\n      Achievements: '',\n    },\n    {\n      CompanyName: 'PUBHUB TECH INDIA PRIAVTE LIMITED',\n      Designation: 'Software Developer',\n      DateOfJoining: 'Sep 2018',\n      DateOfLeaving: 'Sep 2020',\n      MonthOfLeaving: '',\n      YearOfLeaving: '2018',\n      Achievements: '',\n    },\n  ],\n  frontEndSkillsDescription: 'Front End Tech',\n  frontEndskills: [\n    {\n      skillname: 'HTML5',\n    },\n    {\n      skillname: 'CSS',\n    },\n    {\n      skillname: 'BootStrap',\n    },\n    {\n      skillname: 'JavaScript',\n    },\n    {\n      skillname: 'JQuery',\n    },\n    {\n      skillname: 'Reactjs',\n    },\n    {\n      skillname: 'Vuejs',\n    },\n  ],\n  backEndSkillsDescription: 'Back End Tech',\n  backEndSkills: [\n    {\n      skillname: 'C#',\n    },\n    {\n      skillname: 'ASP.NET',\n    },\n    {\n      skillname: 'ASP.NET MVC',\n    },\n    {\n      skillname: 'ASP.NET CORE',\n    },\n    {\n      skillname: 'WEB API',\n    },\n  ],\n  devToolsDescription: 'Development Tools',\n  devToolsSkills: [\n    {\n      skillname: 'Visual Studio 2019',\n    },\n    {\n      skillname: 'Visual Studio Code',\n    },\n    {\n      skillname: 'Micrpsoft Azure',\n    },\n    {\n      skillname: 'SQL Server 2018',\n    },\n    {\n      skillname: 'Oracle',\n    },\n    {\n      skillname: 'JIRA',\n    },\n    {\n      skillname: 'Bitbucket',\n    },\n    {\n      skillname: 'Git',\n    },\n    {\n      skillname: 'WIX Toolset',\n    },\n  ],\n\n  portfolio: [\n    {\n      name: 'MS SIMULATOR',\n      client: 'Thermo Fisher Scientific',\n      description:\n        'MS simulator is an existing application with in Thermo Fisher IT landscape. The simulator is used to simulate data acquisition from devices. It has been used across Thermo Fisher to test the device driver software without connecting to a real expensive device. The existing simulator is not meeting the future requirement of TFS as it was built on the old technology. As part of this project, the existing simulator will be re-written using modern technologies (C#, .Net Core, Vue.js, API).',\n      imgurl: 'images/portfolio/phone.jpg',\n    },\n    {\n      name: 'J&K POWER DEVELOPMENT DEPAERTMENT',\n      client: 'JKPDD',\n      description:\n        'JKPDD  is a customer service portal provides Meter, Usage, and billing information. The source of truth for ADSS is Oracle application CCB (Customer care Billing) and MDM (Meter Data Management). This Product directly and indirectly provides the service to different Consumers’.',\n      imgurl: 'images/portfolio/project.jpg',\n    },\n    {\n      name: 'project3',\n      description: 'mobileapp',\n      imgurl: 'images/portfolio/project2.png',\n    },\n    {\n      name: 'project4',\n      description: 'mobileapp',\n      imgurl: 'images/portfolio/phone.jpg',\n    },\n  ],\n  testimonials: [\n    {\n      description: 'MS SIMULATOR',\n      name:\n        'MS simulator is an existing application with in Thermo Fisher IT landscape. The simulator is used to simulate data acquisition from devices. It has been used across Thermo Fisher to test the device driver software without connecting to a real expensive device. The existing simulator is not meeting the future requirement of TFS as it was built on the old technology. As part of this project, the existing simulator will be re-written using modern technologies (C#, .Net Core, Vue.js, API).',\n      client: 'Thermo Fisher Scientific',\n      techStack: 'C#, .NET CORE, Web API, VueJS, Microsoft Azure.',\n    },\n    {\n      description: 'J&K POWER DEVELOPMENT DEPAERTMENT',\n      name:\n        'JKPDD  is a customer service portal provides Meter, Usage, and billing information. The source of truth for ADSS is Oracle application CCB (Customer care Billing) and MDM (Meter Data Management). This Product directly and indirectly provides the service to different Consumers.',\n      client: 'JKPDD',\n      techStack: 'ReactJS, Node.js, Material-UI, Jira.',\n    },\n    {\n      description: 'HRMS-ATTENDANCE & HR MANAGEMENT SYSTEM',\n      name:\n        'Attendance management is the act of managing attendance or presence in a work setting to minimize loss due to employee downtime. It mainly supposed to give login, logout timings, and salary calculations based on their PHR’s and performance and different types of reports. Attendance management goes beyond this to provide a working environment which maximizes and motivates employee attendance, which also allow for cross-linking between attendance data and performance',\n      client: 'APEX COVANTAGE INDIA PRIVATE LIMITED',\n      techStack: 'Asp.Net MVC, Entity Framework, C#, JavaScript, Jira.',\n    },\n    {\n      description: 'PQA Tracker – Product QA Tracker ',\n      name:\n        'Product QA Tracker is an online quality tracking module where in, facilities will submit the batches and QA team will take the allocation for the submitted batches’ and do the QA. Once the QA is done, the QA results will be updated in the systems and systems will auto generate mails to all the facilities, as well as delivery team about the status. Using this application, QA Manager can check the team efficiency. Even quality group can generate various reports like Batch Status, QAG Certificates, List of errors, etc.',\n      client: 'APEX COVANTAGE INDIA PRIVATE LIMITED',\n      techStack: 'Asp.Net, Entity Framework, C#, Telerik Controls, Jira.',\n    },\n  ],\n}\n\nexport default resumeData\n","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Resume from './components/Resume'\nimport Portfolio from './components/Portfolio'\nimport Testimonials from './components/Testimonials'\nimport ContactUs from './components/ContactUs'\nimport Footer from './components/Footer'\nimport resumeData from './resumeData'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        {/* <Portfolio resumeData={resumeData}/> */}\n        <Testimonials resumeData={resumeData} />\n        <ContactUs resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}